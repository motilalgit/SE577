# We are using a deployment kind, that creates a kubernetes replica set under the covers
# this allows us to scale up and scald down, initial replicas will be one for demo
# purposes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: se577-ui-deployment
  labels:
    app: se577-web-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: se577-web-ui
  template:
    metadata:
      labels:
        app: se577-web-ui
    spec:
      # Just a quick word on imagePullPolicy: IfNotPresent, by default kubernetes will try to pull
      # container images from a container repository like docker hub.  Since we are just demoing
      # we manually installed the container inside of kind via the command in the instructions
      # 'kind load docker-image ...' thus this tells the API to check if the container is present
      # and if so use it, if not, find it in the repository.  Also notice i did not tag the image
      # by default it will put ':latest' at the end, best practice is to fix to a tagged image so
      # that the build process is largely ephemeral - eg, .../se577-demo-app:v-1.1
      containers:
        - name: se577-web-ui
          image: architecting-software/se577-demo-app
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          resources:
            limits:
              cpu: '500m'
              memory: '10Mi'
---
kind: Service
apiVersion: v1
metadata:
  name: se577-web-ui-svc
spec:
  selector:
    app: se577-web-ui
  ports:
    # Default port used by the image
    - port: 9080
